{"name":"Flexgp.github.io","tagline":"Tutorial and Blog","body":"# Welcome to FlexGP\r\nFlexGP is a Evolutionary Computation framework aimed at data modeling and knowledge discovery. Current release provides functionality both for modeling data and for testing the retrieved models. In this website we provide a quick tutorial to get started and model your data.\r\n\r\n# Tutorial\r\n\r\n## Step 1: Downloading the source code\r\n\r\n```\r\n$ cd your_repo_root/repo_name\r\n$ git fetch origin\r\n$ git checkout gh-pages\r\n```\r\n\r\n## Step 2: Running FlexGP \r\nIt is possible to run FlexGP directly from your terminal or from Matlab\r\n\r\n### Running FlexGP from the terminal\r\n\r\n#### Model the data\r\nAll you need to provide is the path to your dataset and the optimization time\r\n```\r\n$ java -jar flexgp.jar -train path_to_your_data -minutes 10 \r\n```\r\nAt the end of the run a set of files are generated:\r\n\r\n1. **pareto.txt**: models forming the Pareto Front (accuracy vs model complexity).\r\n\r\n2. **leastComplex.txt**: least complex model of the Pareto Front.\r\n\r\n3. **mostAccurate.txt**: most accurate model of the Pareto Front.\r\n\r\n4. **knee.txt**: model at the knee of the Pareto Front.\r\n\r\n5. **bestModelGeneration.txt**: most accurate model per generation.\r\n\r\n6. **fusedModel.txt**: fused model of the Pareto Front obtained with Adaptive Regression by Mixing (see _Adaptive Regression by Mixing. Yuhong Yang. Journal of the American Statistical Association Vol. 96, No. 454 (Jun., 2001), pp. 574-588_).\r\n\r\n\r\n#### Test the models\r\nFlexGP provides functionality to obtain the Mean Squared Error (MSE) of the retrieved models once the training is finished. In the examples below, the additional _-integer_ flag indicates whether the targets are integer or floating point values. To test the models saved in files 1) to 5), do:\r\n```\r\n$ java -jar flexgp.jar -test path_to_your_data -integer true -scaled model_file \r\n```\r\nTo obtain the MSE of the fused model of the Pareto Front:\r\n```\r\n$ java -jar flexgp.jar -test path_to_your_data -integer false -fused model_file \r\n```\r\n\r\n\r\n### Running FlexGP from Matlab\r\n\r\n## Step 3: Speeding up your runs with C++ optimized execution\r\nThis option is only supported for Linux Debian platforms and requires the gcc and g++ compilers:\r\n```\r\n$ sudo apt-get install gcc\r\n$ sudo apt-get install g++\r\n```\r\nModify the Linux kernel parameter governing the shared memory size to be at least as large as the data being analyzed, in the next example we set it to 2GB\r\n```\r\n$ sudo echo 2147483648 > /proc/sys/kernel/shmmax\r\n```\r\n\r\n```\r\n$ sudo nano /sys/kernel/shmmax \r\n$ git fetch origin\r\n$ git checkout gh-pages\r\n```\r\n\r\n# Results\r\nTo check reports visit our blog:\r\n[FlexGP Blog](blog.html)\r\n\r\n# Support or Contact\r\nThis page has been created by the Any-scale Learning For All (ALFA) group at MIT. Please contact us at: flexgp@csail.mit.edu \r\n\r\nauthor: @ignacioarnaldo\r\n","google":"flexgp","note":"Don't delete this file! It's used internally to help with page regeneration."}